#include "909_stone_game.hpp"

#include <gtest/gtest.h>

#include <utility>
#include <vector>

#include "../test_utils.hpp"
typedef pair<vector<vector<int>>, int> TestCase;

void test_stone_game(TestCase& c) {
    auto [board, ans] = c;
    auto myAns = snakesAndLadders(board);
    EXPECT_EQ(myAns, ans);
}

TEST(leetcode, stone_game) {
    TestCase c1{{{-1, -1, -1, -1, -1, -1},
                 {-1, -1, -1, -1, -1, -1},
                 {-1, -1, -1, -1, -1, -1},
                 {-1, 35, -1, -1, 13, -1},
                 {-1, -1, -1, -1, -1, -1},
                 {-1, 15, -1, -1, -1, -1}},
                4};

    TestCase c2{{{-1, -1, -1}, {-1, 9, 8}, {-1, 8, 9}}, 0};

    TestCase c3{{{-1, 10, -1, 15, -1},
                 {-1, -1, 18, 2, 20},
                 {-1, -1, 12, -1, -1},
                 {2, 4, 11, 18, 8},
                 {-1, -1, -1, -1, -1}}

                ,
                3};

    TestCase c4{{{-1, 83, -1, 46, -1, -1, -1, -1, 40, -1},
                 {-1, 29, -1, -1, -1, 51, -1, 18, -1, -1},
                 {-1, 35, 31, 51, -1, 6, -1, 40, -1, -1},
                 {-1, -1, -1, 28, -1, 36, -1, -1, -1, -1},
                 {-1, -1, -1, -1, 44, -1, -1, 84, -1, -1},
                 {-1, -1, -1, 31, -1, 98, 27, 94, 74, -1},
                 {4, -1, -1, 46, 3, 14, 7, -1, 84, 67},
                 {-1, -1, -1, -1, 2, 72, -1, -1, 86, -1},
                 {-1, 32, -1, -1, -1, -1, -1, -1, -1, 19},
                 {-1, -1, -1, -1, -1, 72, 46, -1, 92, 6}},
                3};

    TestCase c5{{{1, 1, -1}, {1, 1, 1}, {-1, 1, 1}}, -1};

    TestCase c6{{{-1, -1, -1, -1, 48, 5, -1},
                 {12, 29, 13, 9, -1, 2, 32},
                 {-1, -1, 21, 7, -1, 12, 49},
                 {42, 37, 21, 40, -1, 22, 12},
                 {42, -1, 2, -1, -1, -1, 6},
                 {39, -1, 35, -1, -1, 39, -1},
                 {-1, 36, -1, -1, -1, -1, 5}},
                3};

    std::vector<TestCase> cases{c6, c5, c4, c3, c1};

    for (TestCase& c : cases) {
        test_stone_game(c);
    }
}
