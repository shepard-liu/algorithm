#include "36_valid_sudoku.hpp"

#include <gtest/gtest.h>

#include <vector>

#include "../test_utils.hpp"

typedef std::pair<vector<vector<char>>, bool> TestCase;

void test_valid_sudoku(TestCase& c) {
    auto myAns = isValidSudoku(c.first);
    auto ans = c.second;
    EXPECT_EQ(myAns, ans);
}

TEST(leetcode, valid_sudoku) {
    std::vector<TestCase> cases{
        {{{'8', '3', '.', '.', '7', '.', '.', '.', '.'},
          {'6', '.', '.', '1', '9', '5', '.', '.', '.'},
          {'.', '9', '8', '.', '.', '.', '.', '6', '.'},
          {'8', '.', '.', '.', '6', '.', '.', '.', '3'},
          {'4', '.', '.', '8', '.', '3', '.', '.', '1'},
          {'7', '.', '.', '.', '2', '.', '.', '.', '6'},
          {'.', '6', '.', '.', '.', '.', '2', '8', '.'},
          {'.', '.', '.', '4', '1', '9', '.', '.', '5'},
          {'.', '.', '.', '.', '8', '.', '.', '7', '9'}},
         false},
        {{{'5', '3', '.', '.', '7', '.', '.', '.', '.'},
          {'6', '.', '.', '1', '9', '5', '.', '.', '.'},
          {'.', '9', '8', '.', '.', '.', '.', '6', '.'},
          {'8', '.', '.', '.', '6', '.', '.', '.', '3'},
          {'4', '.', '.', '8', '.', '3', '.', '.', '1'},
          {'7', '.', '.', '.', '2', '.', '.', '.', '6'},
          {'.', '6', '.', '.', '.', '.', '2', '8', '.'},
          {'.', '.', '.', '4', '1', '9', '.', '.', '5'},
          {'.', '.', '.', '.', '8', '.', '.', '7', '9'}},
         true},
    };

    for (TestCase& c : cases) {
        test_valid_sudoku(c);
    }
}
